name: Build and Push to GHCR

permissions:
  contents: read
  packages: write
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: prefix-dev/setup-pixi@v0.8.8
        with:
          pixi-url: https://github.com/fecet/pixi/releases/download/v0.48.1/pixi-x86_64-unknown-linux-musl
          environments: >-
            default
            podman
            bootstrap
          activate-environment: default
      - name: Add .pixi/envs/default/bin to the $PATH
        shell: bash
        run: |
          echo "$(pwd)/.pixi/envs/default/bin" >> $GITHUB_PATH

      # - name: Reconfig podman storage
      #   shell: bash
      #   run: |
      #     pixi run podman info || sleep 60 && pixi run podman info
      - name: Install KVM tools
        run: |
          # sudo apt-get update
          # sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virtinst
          # sudo usermod -aG kvm,libvirt $USER
          sudo usermod -aG kvm $USER
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' \
            | sudo tee /etc/udev/rules.d/99-kvm.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          mkdir -p ~/.config/containers
          cat > ~/.config/containers/containers.conf <<EOF
          [engine]
          runtime = "runc"
          EOF
          cat > ~/.config/containers/storage.conf <<EOF
          [storage]
          driver   = "overlay"
          runroot  = "/run/user/$(id -u)/containers"
          graphroot= "$CONDA_PREFIX/share/containers/storage"
          EOF
          cat ~/.config/containers/storage.conf
          cat ~/.config/containers/containers.conf

      - name: Prepare qemu machine
        run: |
          pixi run -e bootstrap set-machine
          pixi run ship-env

      - name: Prepare podman
        run: |
          pixi run -e bootstrap prepare

      # - name: Bootstrap qemu machine os
      #   shell: pixi run -e podman machine-bash {0}
      #   run: |
      #     cat /root/.bashrc
      #     cd thirdparty/podman-machine-os
      #     ./build.sh
      #     echo "Success Build"
      #
      - name: Bootstrap qemu machine os
        run: |
          pixi run bootstrap-machine

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: push qemu machine oci
        shell: pixi run -e bootstrap bash {0}
        run: |
          cd thirdparty/podman-machine-os
          source ./gather.sh
          podman images
          podman manifest push --all "$FULL_IMAGE_NAME"

      - name: Setup tmate session
        # Only run tmate session when build fails and package is in the debug list
        # if: ${{ failure() && contains(fromJson('["systemtap"]'), matrix.package) }}
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 15
        with:
          limit-access-to-actor: true
